/*
Deployment script for DB_VS_Project

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DisplayTestData "true"
:setvar RunPostDeployScript "true"
:setvar DatabaseName "DB_VS_Project"
:setvar DefaultFilePrefix "DB_VS_Project"
:setvar DefaultDataPath "C:\Users\karen\AppData\Local\Microsoft\VisualStudio\SSDT\"
:setvar DefaultLogPath "C:\Users\karen\AppData\Local\Microsoft\VisualStudio\SSDT\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Dropping Check Constraint [dbo].[CK_Grades]...';


GO
ALTER TABLE [dbo].[Enrolment] DROP CONSTRAINT [CK_Grades];


GO
PRINT N'Creating Check Constraint [dbo].[CK_Grades]...';


GO
ALTER TABLE [dbo].[Enrolment] WITH NOCHECK
    ADD CONSTRAINT [CK_Grades] CHECK (Grade IN ('N','P','C'));


GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

If ('$(RunPostDeployScript)' = 'true')

BEGIN

delete from student;

INSERT INTO STUDENT (StudentID, FNAME, Surname, NewColumn) VALUES
(1, 'One', 'Smith', null),
(2, 'Two', 'Jones', null),
(3, 'Three', 'Mason', null);
END
GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[Enrolment] WITH CHECK CHECK CONSTRAINT [CK_Grades];


GO
PRINT N'Update complete.';


GO
